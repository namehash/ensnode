name: Release

on:
  push:
    branches:
      - main
      - feat/445-add-versioning-for-ensnode
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    name: Release
    if: github.repository == 'namehash/ensnode'
    runs-on: blacksmith-4vcpu-ubuntu-2204

    steps:
      - uses: actions/checkout@v3

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version-file: .nvmrc

      # - name: Install dependencies
      #   run: pnpm install --frozen-lockfile

      # - name: Create Release PR or Publish to NPM
      #   id: changesets
      #   uses: changesets/action@v1
      #   with:
      #     version: pnpm version
      #     publish: pnpm release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Parse publish results
        id: publish-meta
        # if: steps.changesets.outputs.published == 'true'
        # env:
          # PUBLISHED_PACKAGES: steps.changesets.outputs.publishedPackages 
        run: |  

            echo "ensindexer_version=test" >> $GITHUB_OUTPUT
            # Iterate through each item in the JSON array
            # echo "$PUBLISHED_PACKAGES" | jq -c '.[]' | while read -r item; do
            #   # Extract name and version using jq
            #   name=$(echo "$item" | jq -r '.name')
            #   version=$(echo "$item" | jq -r '.version')

            #   echo "Processing package: $name"
            #   echo "Version: $version"
              
            #   case "$name" in
            #       '@apps/ensindexer')
            #           echo "ensindexer_version=$version" >> $GITHUB_OUTPUT
            #           ;;
            #       *)
            #           echo "Skipping: $name"
            #           ;;
            #   esac
            # done
          

                  
      - name: Set up QEMU (for cross-architecture builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ENSIndexer Docker image
        if: steps.publish-meta.outputs.ensindexer_version != ''
        env:
          ENSINDEXER_IMAGE_NAME: ghcr.io/${{ github.repository }}/ensindexer:${{ steps.publish-meta.outputs.ensindexer_version }}
          DOCKERFILE_PATH: apps/ensindexer/Dockerfile
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker buildx build --push --platform linux/amd64,linux/arm64 -f $DOCKERFILE_PATH -t $ENSINDEXER_IMAGE_NAME  .
          
