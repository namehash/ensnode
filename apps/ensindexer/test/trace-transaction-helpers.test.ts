import { describe, expect, it } from "vitest";

import { getAddressesFromTrace } from "@/lib/trace-transaction-helpers";

import {
  getExampleTransactionTrace,
  getExampleTransactionTraceSerializedAddress,
} from "./utils/example-trace-transactions";

describe("transaction helpers", () => {
  describe("getAddressesFromTrace", () => {
    it("should extract all addresses from a transaction trace", () => {
      const trace = getExampleTransactionTrace();
      const addresses = getAddressesFromTrace(trace);

      expect(addresses).toEqual(
        new Set([
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000001",
          "0x0000000000000000000000000000000000000003",
          "0x0000000000000000000000000000000000000004",
          "0x000000000000000000000000000000000000000a",
          "0x0000000000000000000000000000000000000017",
          "0x000000000000000000000000000000000000001b",
          "0x000000000000000000000000000000000000001c",
          "0x0000000000000000000000000000000000000020",
          "0x0000000000000000000000000000000000000040",
          "0x0000000000000000000000000000000000000042",
          "0x0000000000000000000000000000000000000044",
          "0x0000000000000000000000000000000000000080",
          "0x00000000000000000000000000000000000000be",
          "0x00000000000000000000000000000000000000c0",
          "0x00000000000000000000000000000000000000e0",
          "0x0000000000000000000000000000000000000120",
          "0x00000000000000000000000000000000000001a0",
          "0x0000000000000000000000000000000000000240",
          "0x00000000000000000000000000000000000002c4",
          "0x0000000000000000000000000000000000000400",
          "0x0000000000000000000000000000000000000420",
          "0x0000000000000000000000000000000000003db8",
          "0x00000000000000000000000000000000000aac2b",
          "0x00000000000000000000000000000000000f4240",
          "0x0000000000000000000000000000000007ebc7ea",
          "0x00000000000000000000000000000000617fe48d",
          "0x000000000000000000000000004237f1058471f5",
          "0x00000000000000000041c612de330711ec108f2f",
          "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
          "0x03db8bc8c9bd565877b363ab4b4e7f39a777d550",
          "0x084b1c3c81545d370f3634392de611caabff8148",
          "0x15f50bb48ca4be1ad4a6ad5804b18fb7d198618f",
          "0x2f84f6f613280fd4df11ab2480e777ba8bb6282a",
          "0x314159265dd8dbb310642f98f50c066173c1259b",
          "0x3db8bc8c9bd565877b363ab4b4e7f39a777d5500",
          "0x497bb46fbac4658be6fe113927af536c68552282",
          "0x4ead68830f45d73478c93953ed56c532bffff4b5",
          "0x5693e9ef54f7b78ddef14997c1fbc51aa1d2fac9",
          "0x60eeb5870ebef49ce7cdc354dac49906cf8d9285",
          "0x6325d247696d39ee59ffd931a87e022a68bbbe4f",
          "0x9fad9ffcea95c345d41055a63bd099e1a0576109",
          "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
          "0xa2327a938febf5fec13bacfb16ae10ecbc4cbdcf",
          "0xb39e09279d4035c0f92307741d9dd8ed66e74de0",
          "0xb684849f3a7bd53fbad882302b5f7b9276c9b491",
          "0xc8af9c2389af5710dba268050ebf9350cd0acab3",
          "0xd15953bd7cbcb36b69d4b9961b56f59cc2553d2e",
          "0xe5857440bbff64c98ceb70d650805e1e96adde7a",
          "0xe915058df18e7efe92af5c44df3f575fba061b64",
          "0xedee915ae45cc4b2fdd1ce12a2f70dca0b2ad9e5",
          "0xee94cf48924b720af939e732e98f30f9594f87c5",
          "0xf58d55f06bb92f083e78bb5063a2dd3544f9b6a3",
          "0xf61f3c9cecb8d206dea1faed99a693e6d3baaef2",
        ]),
      );
      expect(addresses.size).toBe(54);
    });

    it("should extract all addresses, including serialized ones, from a transaction trace", () => {
      const trace = getExampleTransactionTraceSerializedAddress();
      const addresses = getAddressesFromTrace(trace);

      expect(addresses).toEqual(
        new Set([
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000001",
          "0x000000000000000000000000000000000000000f",
          "0x0000000000000000000000000000000000000040",
          "0x0000000000000000000000000000000000000080",
          "0x00000000000c2e074ec69a0dfb2997ba6c7d2e1e",
          "0x231b0ee14048e9dccd1d247744d114a4eb5e8e63",
          "0x5ca1e1ab50e1c9765f02b01fd2ed340f394c5dda",
          "0x5fe156f51443ae995300efc719ddeae1d2c76730",
          "0xa58e81fe9b61b5c3fe2afd33cf304c454abfc7cb",
        ]),
      );
      expect(addresses.size).toBe(10);
    });
  });
});
