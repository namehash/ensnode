.image1, .image2 {
    max-width: 100%;
    width: 440px;
    height: 350px;
    user-select: none;
    pointer-events: none;
}

.image1 {
    position: relative;
}

.image2 {
    position: absolute;

    animation:lrtest 8s ease-in-out infinite;
    /*clip-path: polygon(0 0, 50% 0, 50% 100%, 0 100%);*/
}

@keyframes lrtest {
    0% {
        clip-path: polygon(0 0, 8% 0, 8% 100%, 0 100%);
    }
    50% {
        clip-path: polygon(0 0, 92% 0, 92% 100%, 0 100%);
    }

    100% {
        clip-path: polygon(0 0, 8% 0, 8% 100%, 0 100%);
    }
}

.wrapper {
    position: relative;
    width: fit-content;
    height: 410px;

    /*border: 1px solid red;*/

    overflow-y: hidden;

    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;
}

.wrapper:after {
    content: "";
    position: absolute;
    inset: 0;
    box-shadow:
            inset 0 18px 12px -5px white,
            inset 0 -18px 12px -5px white,
            inset -10px 0 12px -3px white;

    z-index: 2;
}

.wrapper:hover .controllerButton {
    opacity: 1.0;
}

.outerController {
    position: absolute;
    inset: 0;

    z-index: 2;

    animation: lrController 8s ease-in-out infinite;
    /*left: 50%;*/
}

@keyframes lrController {
    0% {
        left: 8%;
    }
    50% {
        left: 92%;
    }

    100% {
        left: 8%;
    }
}

.innerController {
    position: relative;
    height: 100%;
}

.controllerButton {
    height: 20px;
    width: 20px;
    /*margin-left: -10px;*/
    border: none;
    border-radius: 50%;
    background-color: white;
    --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);

    position: absolute;
    top: calc(50% - 10px);
    left: -10px;

    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    justify-content: center;
    align-items: center;

    cursor: pointer;

    opacity: 0;
    transition: all 0.5s ease-in-out;
}

.lineBackground {
    position: absolute;
    inset: 0;
    border: none;

    background-color: white;
    opacity: 0.7;
    width: 50px;
}

.posRight {
    mask-image: linear-gradient(to right, black 5%, transparent);
}

.posLeft {
    top: -1rem;
    left: -50px;
    mask-image: linear-gradient(to left, black 5%, transparent);
}


.line {
    position: absolute;
    inset: 0 0;

    width: 4px;
    left: -2px;

    background-image: linear-gradient(0deg, #00C0FF 0%, #FFCF00 49%, #FC4F4F 80%, #00C0FF 100%);

    animation:slideLine 3.5s linear infinite;
    /* Animation probably won't work if we would like to have both the inactive animation
     and the user interactivity
    - most probably would have to be js-controlled */


    transform-style: preserve-3d;
}

.line::before {
    content: "";
    position: absolute;
    inset: -5px; /* Exact values can always be adjusted */
    background: linear-gradient(0deg, #00C0FF 0%, #FFCF00 49%, #FC4F4F 80%, #00C0FF 100%);
    filter: blur(15px);
    transform: translate3d(13px,-3px,-1px);
    border-radius: inherit;
    pointer-events: none;
    animation:slideLine 3.5s linear infinite;
}

@keyframes slideLine {
    to {
        background-position: 0 410px;
        /*if the animation is to be 'fluent' the transition has to equal elem height*/
    }
}

