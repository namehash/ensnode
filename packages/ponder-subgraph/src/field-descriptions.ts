/**
 * The executable GraphQL schema generated by this package is derived entirely from the drizzle
 * schema, similarly to how Ponder generates their own GraphQL api. Because drizzle doesn't have the
 * ability to include field-level comments [0] there's no way for the auto generated api to easily
 * infer those for the `description` field during schema introspection.
 *
 * The stop-gap we've employed is to simply map from a field to its description in this file and,
 * while generating the Subgraph-compatible GraphQL schema, include those descriptions if available.
 *
 * [0] https://github.com/drizzle-team/drizzle-orm/issues/886
 */

export function getFieldDescription(fieldName: string): string | undefined {
  if (DESCRIPTIONS[fieldName]) return DESCRIPTIONS[fieldName];
  // console.log(`Description Not Found: ${fieldName}`);
  return undefined;
}

const DESCRIPTIONS: Record<string, string> = {
  "Domain.id": "The namehash of the name",
  "Domain.name":
    "The human readable name, if known. Unknown portions replaced with hash in square brackets (eg, foo.[1234].eth)",
  "Domain.labelName": "The human readable label name (imported from CSV), if known",
  "Domain.labelhash": "keccak256(labelName)",
  "Domain.parent": "The parent Domain of this Domain, if any",
  "Domain.parentId": "The namehash (id) of the parent name",
  "Domain.subdomains": "List of Domains under this Domain, if any",
  "Domain.subdomainCount": "The number of subdomains",
  "Domain.resolvedAddress": "Currently resolved Address",
  "Domain.resolvedAddressId": "Address logged from current resolver, if any",
  "Domain.resolver": "The resolver that controls the domain's settings",
  "Domain.resolverId": "The resolver that controls the domain's settings",
  "Domain.ttl": "The time-to-live (TTL) value of the domain's records",
  "Domain.isMigrated": "Indicates whether the domain has been migrated to a new registrar",
  "Domain.createdAt": "The time when the domain was created",
  "Domain.owner": "The account that owns the domain",
  "Domain.ownerId": "The account that owns the domain",
  "Domain.registrant": "The account that owns the ERC721 NFT for the domain",
  "Domain.registrantId": "The account that owns the ERC721 NFT for the domain",
  "Domain.wrappedOwner": "The account that owns the wrapped domain",
  "Domain.wrappedOwnerId": "The account that owns the wrapped domain",
  "Domain.expiryDate":
    "The expiry date for the domain, from either the registration, or the wrapped domain if PCC is burned",
  "Domain.registration": "The registration associated with the domain",
  "Domain.wrappedDomain": "The wrapped domain associated with the domain",
  "Domain.events": "The events associated with the domain",

  "DomainEvent.id": "The unique identifier of the event",
  "DomainEvent.domain": "The domain name associated with the event",
  "DomainEvent.blockNumber": "The block number at which the event occurred",
  "DomainEvent.transactionID": "The transaction hash of the transaction that triggered the event",
  "Transfer.id": "The unique identifier of the event",
  "Transfer.domain": "The domain name associated with the event",
  "Transfer.blockNumber": "The block number at which the event occurred",
  "Transfer.transactionID": "The transaction hash of the transaction that triggered the event",
  "Transfer.owner": "The account that owns the domain after the transfer",
  "NewOwner.id": "The unique identifier of the event",
  "NewOwner.parentDomain": "The parent domain of the domain name associated with the event",
  "NewOwner.domain": "The domain name associated with the event",
  "NewOwner.blockNumber": "The block number at which the event occurred",
  "NewOwner.transactionID": "The transaction hash of the transaction that triggered the event",
  "NewOwner.owner": "The new account that owns the domain",
  "NewResolver.id": "The unique identifier of the event",
  "NewResolver.domain": "The domain name associated with the event",
  "NewResolver.blockNumber": "The block number at which the event occurred",
  "NewResolver.transactionID": "The transaction hash of the transaction that triggered the event",
  "NewResolver.resolver": "The new resolver contract address associated with the domain",
  "NewTTL.id": "The unique identifier of the event",
  "NewTTL.domain": "The domain name associated with the event",
  "NewTTL.blockNumber": "The block number at which the event occurred",
  "NewTTL.transactionID": "The transaction hash of the transaction that triggered the event",
  "NewTTL.ttl": "The new TTL value (in seconds) associated with the domain",
  "WrappedTransfer.id": "The unique identifier of the event",
  "WrappedTransfer.domain": "The domain name associated with the event",
  "WrappedTransfer.blockNumber": "The block number at which the event occurred",
  "WrappedTransfer.transactionID":
    "The transaction hash of the transaction that triggered the event",
  "WrappedTransfer.owner": "The account that owns the wrapped domain after the transfer",
  "NameWrapped.id": "The unique identifier of the wrapped domain",
  "NameWrapped.domain": "The domain name associated with the wrapped domain",
  "NameWrapped.blockNumber": "The block number at which the wrapped domain was wrapped",
  "NameWrapped.transactionID": "The transaction hash of the transaction that wrapped the domain",
  "NameWrapped.name": "The human-readable name of the wrapped domain",
  "NameWrapped.fuses": "The number of fuses associated with the wrapped domain",
  "NameWrapped.owner": "The account that owns the wrapped domain",
  "NameWrapped.expiryDate": "The expiry date of the wrapped domain registration",
  "NameUnwrapped.id": "The unique identifier of the event",
  "NameUnwrapped.domain": "The domain name associated with the event",
  "NameUnwrapped.blockNumber": "The block number at which the event occurred",
  "NameUnwrapped.transactionID": "The transaction hash of the transaction that triggered the event",
  "NameUnwrapped.owner": "The account that owns the domain after it was unwrapped",
  "FusesSet.id": "The unique identifier of the event",
  "FusesSet.domain": "The domain name associated with the event",
  "FusesSet.blockNumber": "The block number at which the event occurred",
  "FusesSet.transactionID": "The transaction hash of the transaction that triggered the event",
  "FusesSet.fuses": "The number of fuses associated with the domain after the set event",
  "ExpiryExtended.id": "The unique identifier of the event",
  "ExpiryExtended.domain": "The domain name associated with the event",
  "ExpiryExtended.blockNumber": "The block number at which the event occurred",
  "ExpiryExtended.transactionID":
    "The transaction hash of the transaction that triggered the event",
  "ExpiryExtended.expiryDate":
    "The new expiry date associated with the domain after the extension event",

  "Registration.id": "The unique identifier of the registration",
  "Registration.domain": "The domain name associated with the registration",
  "Registration.domainId": "The domain name associated with the registration",
  "Registration.registrationDate": "The registration date of the domain",
  "Registration.expiryDate": "The expiry date of the domain",
  "Registration.cost": "The cost associated with the domain registration",
  "Registration.registrant": "The account that registered the domain",
  "Registration.registrantId": "The account that registered the domain",
  "Registration.labelName": "The human-readable label name associated with the domain registration",
  "Registration.events": "The events associated with the domain registration",

  "RegistrationEvent.id": "The unique identifier of the registration event",
  "RegistrationEvent.registration": "The registration associated with the event",
  "RegistrationEvent.blockNumber": "The block number of the event",
  "RegistrationEvent.transactionID": "The transaction ID associated with the event",
  "NameRegistered.id": "The unique identifier of the NameRegistered event",
  "NameRegistered.registration": "The registration associated with the event",
  "NameRegistered.blockNumber": "The block number of the event",
  "NameRegistered.transactionID": "The transaction ID associated with the event",
  "NameRegistered.registrant": "The account that registered the name",
  "NameRegistered.expiryDate": "The expiry date of the registration",
  "NameRenewed.id": "The unique identifier of the NameRenewed event",
  "NameRenewed.registration": "The registration associated with the event",
  "NameRenewed.blockNumber": "The block number of the event",
  "NameRenewed.transactionID": "The transaction ID associated with the event",
  "NameRenewed.expiryDate": "The new expiry date of the registration",
  "NameTransferred.id": "The ID of the event",
  "NameTransferred.registration": "The registration associated with the event",
  "NameTransferred.blockNumber": "The block number of the event",
  "NameTransferred.transactionID": "The transaction ID of the event",
  "NameTransferred.newOwner": "The new owner of the domain",

  "WrappedDomain.id": "The unique identifier for each instance of the WrappedDomain entity",
  "WrappedDomain.domain": "The domain that is wrapped by this WrappedDomain",
  "WrappedDomain.domainId": "The domain that is wrapped by this WrappedDomain",
  "WrappedDomain.expiryDate": "The expiry date of the wrapped domain",
  "WrappedDomain.fuses": "The number of fuses remaining on the wrapped domain",
  "WrappedDomain.owner": "The account that owns this WrappedDomain",
  "WrappedDomain.ownerId": "The account that owns this WrappedDomain",
  "WrappedDomain.name": "The name of the wrapped domain",

  "Account.id": "The unique identifier for the account",
  "Account.domains": "The domains owned by the account",
  "Account.wrappedDomains": "The WrappedDomains owned by the account",
  "Account.registrations": "The Registrations made by the account",

  "Resolver.id":
    "The unique identifier for this resolver, which is a concatenation of the domain namehash and the resolver address",
  "Resolver.domain": "The domain that this resolver is associated with",
  "Resolver.domainId": "The domain that this resolver is associated with",
  "Resolver.address": "The address of the resolver contract",
  "Resolver.addr":
    "The current value of the 'addr' record for this resolver, as determined by the associated events",
  "Resolver.addrId":
    "The current value of the 'addr' record for this resolver, as determined by the associated events",
  "Resolver.contentHash": "The content hash for this resolver, in binary format",
  "Resolver.texts": "The set of observed text record keys for this resolver",
  "Resolver.coinTypes": "The set of observed SLIP-44 coin types for this resolver",
  "Resolver.events": "The events associated with this resolver",
  "ResolverEvent.id": "Concatenation of block number and log ID",
  "ResolverEvent.resolver": "Used to derive relationships to Resolvers",
  "ResolverEvent.blockNumber": "The block number that the event occurred on",
  "ResolverEvent.transactionID": "The transaction hash of the event",
  "AddrChanged.id": "Unique identifier for this event",
  "AddrChanged.resolver": "The resolver associated with this event",
  "AddrChanged.blockNumber": "The block number at which this event occurred",
  "AddrChanged.transactionID":
    "The transaction ID for the transaction in which this event occurred",
  "AddrChanged.addr": "The new address associated with the resolver",
  "MulticoinAddrChanged.id": "Unique identifier for the event",
  "MulticoinAddrChanged.resolver": "Resolver associated with this event",
  "MulticoinAddrChanged.blockNumber": "Block number in which this event was emitted",
  "MulticoinAddrChanged.transactionID": "Transaction ID in which this event was emitted",
  "MulticoinAddrChanged.coinType": "The coin type of the changed address",
  "MulticoinAddrChanged.addr": "The new address value for the given coin type",
  "NameChanged.id": "Concatenation of block number and log ID",
  "NameChanged.resolver": "Used to derive relationships to Resolvers",
  "NameChanged.blockNumber": "Block number where event occurred",
  "NameChanged.transactionID": "Unique transaction ID where event occurred",
  "NameChanged.name": "New ENS name value",
  "AbiChanged.id": "Concatenation of block number and log ID",
  "AbiChanged.resolver": "Used to derive relationships to Resolvers",
  "AbiChanged.blockNumber": "The block number at which the event was emitted",
  "AbiChanged.transactionID":
    "The transaction hash of the transaction in which the event was emitted",
  "AbiChanged.contentType": "The content type of the ABI change",
  "PubkeyChanged.id": "Concatenation of block number and log ID",
  "PubkeyChanged.resolver": "Used to derive relationships to Resolvers",
  "PubkeyChanged.blockNumber": "Block number of the Ethereum block where the event occurred",
  "PubkeyChanged.transactionID":
    "Transaction hash of the Ethereum transaction where the event occurred",
  "PubkeyChanged.x": "The x-coordinate of the new public key",
  "PubkeyChanged.y": "The y-coordinate of the new public key",
  "TextChanged.id": "Concatenation of block number and log ID",
  "TextChanged.resolver": "Used to derive relationships to Resolvers",
  "TextChanged.blockNumber": "Block number of the Ethereum block in which the event occurred",
  "TextChanged.transactionID": "Hash of the Ethereum transaction in which the event occurred",
  "TextChanged.key": "The key of the text record that was changed",
  "TextChanged.value": "The new value of the text record that was changed",
  "ContenthashChanged.id": "Concatenation of block number and log ID",
  "ContenthashChanged.resolver": "Used to derive relationships to Resolvers",
  "ContenthashChanged.blockNumber": "The block number where the event occurred",
  "ContenthashChanged.transactionID": "The ID of the transaction where the event occurred",
  "ContenthashChanged.hash": "The new content hash for the domain",
  "InterfaceChanged.id": "Concatenation of block number and log ID",
  "InterfaceChanged.resolver": "Used to derive relationships to Resolvers",
  "InterfaceChanged.blockNumber": "The block number in which the event occurred",
  "InterfaceChanged.transactionID":
    "The transaction ID for the transaction in which the event occurred",
  "InterfaceChanged.interfaceID": "The ID of the EIP-1820 interface that was changed",
  "InterfaceChanged.implementer": "The address of the contract that implements the interface",
  "AuthorisationChanged.id": "Unique identifier for this event",
  "AuthorisationChanged.resolver": "The resolver associated with this event",
  "AuthorisationChanged.blockNumber": "The block number at which the event occurred",
  "AuthorisationChanged.transactionID": "The transaction hash associated with the event",
  "AuthorisationChanged.owner": "The owner of the authorisation",
  "AuthorisationChanged.target": "The target of the authorisation",
  "AuthorisationChanged.isAuthorized": "Whether the authorisation was added or removed",
  "VersionChanged.id": "Unique identifier for this event",
  "VersionChanged.resolver": "The resolver associated with this event",
  "VersionChanged.blockNumber": "The block number at which the event occurred",
  "VersionChanged.transactionID": "The transaction hash associated with the event",
  "VersionChanged.version": "The new version number of the resolver",
};
