export const UpgradeableRegistrarController = [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  {
    inputs: [{ internalType: "address", name: "sender", type: "address" }],
    name: "AlreadyRegisteredWithDiscount",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "duration", type: "uint256" }],
    name: "DurationTooShort",
    type: "error",
  },
  {
    inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
    name: "InactiveDiscount",
    type: "error",
  },
  { inputs: [], name: "InsufficientValue", type: "error" },
  {
    inputs: [
      { internalType: "bytes32", name: "key", type: "bytes32" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "InvalidDiscount",
    type: "error",
  },
  {
    inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }],
    name: "InvalidDiscountAmount",
    type: "error",
  },
  { inputs: [], name: "InvalidInitialization", type: "error" },
  { inputs: [], name: "InvalidPaymentReceiver", type: "error" },
  {
    inputs: [
      { internalType: "bytes32", name: "key", type: "bytes32" },
      { internalType: "address", name: "validator", type: "address" },
    ],
    name: "InvalidValidator",
    type: "error",
  },
  {
    inputs: [{ internalType: "string", name: "name", type: "string" }],
    name: "NameNotValid",
    type: "error",
  },
  { inputs: [], name: "NotInitializing", type: "error" },
  {
    inputs: [{ internalType: "address", name: "owner", type: "address" }],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  { inputs: [], name: "ResolverRequiredWhenDataSupplied", type: "error" },
  { inputs: [], name: "TransferFailed", type: "error" },
  { inputs: [], name: "ZeroAddress", type: "error" },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "registrant", type: "address" },
      { indexed: true, internalType: "bytes32", name: "discountKey", type: "bytes32" },
    ],
    name: "DiscountApplied",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "bytes32", name: "discountKey", type: "bytes32" },
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "address", name: "discountValidator", type: "address" },
          { internalType: "bytes32", name: "key", type: "bytes32" },
          { internalType: "uint256", name: "discount", type: "uint256" },
        ],
        indexed: false,
        internalType: "struct UpgradeableRegistrarController.DiscountDetails",
        name: "details",
        type: "tuple",
      },
    ],
    name: "DiscountUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "payee", type: "address" },
      { indexed: false, internalType: "uint256", name: "price", type: "uint256" },
    ],
    name: "ETHPaymentProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "uint64", name: "version", type: "uint64" }],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address", name: "newL2ReverseRegistrar", type: "address" },
    ],
    name: "L2ReverseRegistrarUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "string", name: "name", type: "string" },
      { indexed: true, internalType: "bytes32", name: "label", type: "bytes32" },
      { indexed: true, internalType: "address", name: "owner", type: "address" },
      { indexed: false, internalType: "uint256", name: "expires", type: "uint256" },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "string", name: "name", type: "string" },
      { indexed: true, internalType: "bytes32", name: "label", type: "bytes32" },
      { indexed: false, internalType: "uint256", name: "expires", type: "uint256" },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: "address", name: "previousOwner", type: "address" },
      { indexed: true, internalType: "address", name: "newOwner", type: "address" },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address", name: "newPaymentReceiver", type: "address" },
    ],
    name: "PaymentReceiverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [{ indexed: false, internalType: "address", name: "newPrices", type: "address" }],
    name: "PriceOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "address", name: "newReverseRegistrar", type: "address" },
    ],
    name: "ReverseRegistrarUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_NAME_LENGTH",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_REGISTRATION_DURATION",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "name", type: "string" }],
    name: "available",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "uint256", name: "duration", type: "uint256" },
          { internalType: "address", name: "resolver", type: "address" },
          { internalType: "bytes[]", name: "data", type: "bytes[]" },
          { internalType: "bool", name: "reverseRecord", type: "bool" },
          { internalType: "uint256[]", name: "coinTypes", type: "uint256[]" },
          { internalType: "uint256", name: "signatureExpiry", type: "uint256" },
          { internalType: "bytes", name: "signature", type: "bytes" },
        ],
        internalType: "struct UpgradeableRegistrarController.RegisterRequest",
        name: "request",
        type: "tuple",
      },
      { internalType: "bytes32", name: "discountKey", type: "bytes32" },
      { internalType: "bytes", name: "validationData", type: "bytes" },
    ],
    name: "discountedRegister",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "uint256", name: "duration", type: "uint256" },
      { internalType: "bytes32", name: "discountKey", type: "bytes32" },
    ],
    name: "discountedRegisterPrice",
    outputs: [{ internalType: "uint256", name: "price", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "discountKey", type: "bytes32" }],
    name: "discounts",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "address", name: "discountValidator", type: "address" },
          { internalType: "bytes32", name: "key", type: "bytes32" },
          { internalType: "uint256", name: "discount", type: "uint256" },
        ],
        internalType: "struct UpgradeableRegistrarController.DiscountDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveDiscounts",
    outputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "address", name: "discountValidator", type: "address" },
          { internalType: "bytes32", name: "key", type: "bytes32" },
          { internalType: "uint256", name: "discount", type: "uint256" },
        ],
        internalType: "struct UpgradeableRegistrarController.DiscountDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "addresses", type: "address[]" }],
    name: "hasRegisteredWithDiscount",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "contract IBaseRegistrar", name: "base_", type: "address" },
      { internalType: "contract IPriceOracle", name: "prices_", type: "address" },
      { internalType: "contract IReverseRegistrar", name: "reverseRegistrar_", type: "address" },
      { internalType: "address", name: "owner_", type: "address" },
      { internalType: "bytes32", name: "rootNode_", type: "bytes32" },
      { internalType: "string", name: "rootName_", type: "string" },
      { internalType: "address", name: "paymentReceiver_", type: "address" },
      { internalType: "address", name: "legacyRegistrarController_", type: "address" },
      { internalType: "address", name: "legacyL2Resolver_", type: "address" },
      { internalType: "address", name: "l2ReverseRegistrar_", type: "address" },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentReceiver",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prices",
    outputs: [{ internalType: "contract IPriceOracle", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "name", type: "string" },
          { internalType: "address", name: "owner", type: "address" },
          { internalType: "uint256", name: "duration", type: "uint256" },
          { internalType: "address", name: "resolver", type: "address" },
          { internalType: "bytes[]", name: "data", type: "bytes[]" },
          { internalType: "bool", name: "reverseRecord", type: "bool" },
          { internalType: "uint256[]", name: "coinTypes", type: "uint256[]" },
          { internalType: "uint256", name: "signatureExpiry", type: "uint256" },
          { internalType: "bytes", name: "signature", type: "bytes" },
        ],
        internalType: "struct UpgradeableRegistrarController.RegisterRequest",
        name: "request",
        type: "tuple",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "uint256", name: "duration", type: "uint256" },
    ],
    name: "registerPrice",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "uint256", name: "duration", type: "uint256" },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "uint256", name: "duration", type: "uint256" },
    ],
    name: "rentPrice",
    outputs: [
      {
        components: [
          { internalType: "uint256", name: "base", type: "uint256" },
          { internalType: "uint256", name: "premium", type: "uint256" },
        ],
        internalType: "struct IPriceOracle.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reverseRegistrar",
    outputs: [{ internalType: "contract IReverseRegistrar", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "bool", name: "active", type: "bool" },
          { internalType: "address", name: "discountValidator", type: "address" },
          { internalType: "bytes32", name: "key", type: "bytes32" },
          { internalType: "uint256", name: "discount", type: "uint256" },
        ],
        internalType: "struct UpgradeableRegistrarController.DiscountDetails",
        name: "details",
        type: "tuple",
      },
    ],
    name: "setDiscountDetails",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "l2ReverseRegistrar_", type: "address" }],
    name: "setL2ReverseRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "paymentReceiver_", type: "address" }],
    name: "setPaymentReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "contract IPriceOracle", name: "prices_", type: "address" }],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "string", name: "name", type: "string" },
      { internalType: "uint256", name: "signatureExpiry", type: "uint256" },
      { internalType: "uint256[]", name: "coinTypes", type: "uint256[]" },
      { internalType: "bytes", name: "signature", type: "bytes" },
    ],
    name: "setReverseRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "contract IReverseRegistrar", name: "reverse_", type: "address" }],
    name: "setReverseRegistrar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "name", type: "string" }],
    name: "valid",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  { inputs: [], name: "withdrawETH", outputs: [], stateMutability: "nonpayable", type: "function" },
] as const;
